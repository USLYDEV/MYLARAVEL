<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use App\Models\Student;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Validator;

class StudentController extends Controller
{
    public function index(){

        $students = Student::all();
        if ($students->count()> 0){

                return response()->json(
                    [
                        'status' => 200, 
                        'students' => $students
                    ], 200);

         }else{

            return response()->json(
            [
                'status' => 404, 
                'students' => 'No record found'
            ], 404);
         }
    }

    //VALIDATE AND CREATE NEW ITEM IN MODEL DB 
    public function store(Request $request){

            $validator = Validator::make($request->all(), [
                'name' => 'required',
                'course' => 'required',
                'email' => 'required',
                'phone' => 'required',
            ]);

            if($validator->fails()){
                return response()->json([
                    'status' => 422,
                    'error' => $validator->messages()
                ],422 );
             }else{
                $students = Student::create([
                    'name' => $request->name,
                    'course' => $request->course,
                    'email' => $request->email,
                    'phone' => $request->phone,
                ]);

                if($students){
                    return response()->json([
                        'status' => 200,
                        'message'=> 'Student Created Successfully'
                    ],200);
                }else{
                    return response()->json([
                        'status' => 500,
                        'message'=> 'something went wrong'
                    ],500);

                }
             }
     }

     //SHOW LIST OF ITEM IN DB
        public function show ($id)
        {
            $student = Student::find($id);
            if($student){
                return response()->json([
                    'status' => 200,
                    'student'=> $student
                ],200);
            }else{
                return response()->json([
                    'status' => 404,
                    'message'=> 'No Such Student Found!'
                ],404);

            }

        }

        public function edit ($id)
        {
            $student = Student::find($id);
            if($student){
                return response()->json([
                    'status' => 200,
                    'student'=> $student
                ],200);
            }else{
                return response()->json([
                    'status' => 404,
                    'message'=> 'No Such Student Found!'
                ],404);

            }

        }
//UPDATE DB MODEL RECORD
        public function update (Request $request, int $id){
            $validator = Validator::make($request->all(), [
                'name' => 'required',
                'course' => 'required',
                'email' => 'required',
                'phone' => 'required',
            ]);

            if($validator->fails()){
                return response()->json([
                    'status' => 422,
                    'error' => $validator->messages()
                ],422 );
             }else{

                $student = Student::find($id);
                
                if($student){
                    $student->update([
                        'name' => $request->name,
                        'course' => $request->course,
                        'email' => $request->email,
                        'phone' => $request->phone,
                    ]);

                    return response()->json([
                        'status' => 200,
                        'message'=> 'Student Updated Successfully'
                    ],200);
                }else{
                    return response()->json([
                        'status' => 404,
                        'message'=> 'No student found'
                    ],404);

                }
             }

        }
//This will delete the record from DB
        public function destroy($id)
        {
            $student = Student::find($id);
            if($student){

                $student->delete();
            }else{
                return response()->json([
                    'status' => 404,
                    'message'=> 'No student found'
                ],404);
            }
        }
 }
